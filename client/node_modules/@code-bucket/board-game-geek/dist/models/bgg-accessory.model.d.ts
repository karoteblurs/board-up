import { BggVersion, IBggVersion } from './bgg-version.model';
import { IBggThingAttributes } from './bgg-thing-attributes.interface';
import { IAttributes } from './attributes.interface';
import { BggLink, IBggLink } from './bgg-link.model';
import { BggName, IBggName } from './bgg-name.model';
export interface IBggAccessory extends IAttributes<IBggThingAttributes> {
    thumbnail?: {
        _text: string;
    };
    image?: {
        _text: string;
    };
    name: IBggName[] | IBggName;
    description: {
        _text: string;
    };
    yearpublished?: IAttributes<{
        value: string;
    }>;
    link: IBggLink[] | IBggLink;
    versions: {
        item: IBggVersion[] | IBggVersion;
    };
}
export declare class BggAccessory {
    id: number;
    type: 'boardgameaccessory' | string;
    thumbnail?: string;
    image?: string;
    links: BggLink[];
    names: BggName[];
    yearpublished?: number;
    description: string;
    versions: BggVersion[];
    get namesValues(): string[];
    get primaryName(): string | undefined;
    get publishers(): BggLink[];
    get accessoryFor(): BggLink | undefined;
    constructor(data: IBggAccessory);
}
//# sourceMappingURL=bgg-accessory.model.d.ts.map