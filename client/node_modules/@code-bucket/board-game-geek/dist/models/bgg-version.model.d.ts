import { IAttributes } from './attributes.interface';
import { IBggThingAttributes } from './bgg-thing-attributes.interface';
import { BggLink, IBggLink } from './bgg-link.model';
import { BggName, IBggName } from './bgg-name.model';
export interface IBggVersion extends IAttributes<IBggThingAttributes> {
    thumbnail?: {
        _text: string;
    };
    image?: {
        _text: string;
    };
    link?: IBggLink[] | IBggLink;
    name?: IBggName[] | IBggName;
    yearpublished?: IAttributes<{
        value: string;
    }>;
    productcode?: IAttributes<{
        value: string;
    }>;
    width?: IAttributes<{
        value: string;
    }>;
    length?: IAttributes<{
        value: string;
    }>;
    depth?: IAttributes<{
        value: string;
    }>;
    weight?: IAttributes<{
        value: string;
    }>;
}
/**
 * Parsed version from bgg xml data
 */
export declare class BggVersion {
    id: number;
    type: 'boardgameversion' | 'bgaccessoryversion' | string;
    thumbnail?: string;
    image?: string;
    links: BggLink[];
    names: BggName[];
    yearpublished?: number;
    productcode?: string;
    width?: number;
    length?: number;
    depth?: number;
    weight?: number;
    get namesValues(): string[];
    get primaryName(): string | undefined;
    get versionFor(): BggLink | undefined;
    get artists(): BggLink[];
    get publishers(): BggLink[];
    get languages(): BggLink[];
    constructor(data: IBggVersion);
}
//# sourceMappingURL=bgg-version.model.d.ts.map